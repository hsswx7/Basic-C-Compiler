//Harprabh Sangha
#ifndef TOKEN_H
#define TOKEN_H

#include <stdio.h>
#include <stdlib.h>
#include <signal.h>
#include <string.h>

char buffer[9999];  //buffer to hold all the char's in a file

typedef struct token
{
	int tokenID; //holds Number value ex : 1050
	char *tokenName; //Holds the name of the token ex : End_tk
	int lineNum;  //Holds the line number for each token
	char *tokenWord;  // holds the actually String of each token ex: x or y or 1  or 2 and so on

}token; 


/* The array the Driver uses to determine which token to print */
static int dfaArray[29][25] =
{ // State   L     D     =    !    <     >     :      +    -     *     /     &     %     .     (      )     {     }     ;    [     ]      ,    WS    EOF
      {0,    1,    2,    3,  -1,   7,    10,   13,   14,   15,   16,   17,   18,   19,   20,   21,   22,   23,   24,   25,   26,   27,   28,    0,  1050},
      {1,    1,    1,   -1, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000},
      {2,  1001,   2,  1001, -1,  1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001},
      {3,  1003, 1003,   4,   5,  1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003},
      {4,  1004, 1004, 1004, -1,  1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004},
      {5,   -1,   -1,    6,  -1,   -1,   -1,   -1,   -1,   -1,   -1,  -1,   -1,   -1,   -1,    -1,   -1,   -1,   -1,   -1,   -1,  -1,   -1,   -1,     -1},
      {6,  1005, 1005, 1005, -1,  1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005},
      {7,  1007, 1007,   8,  -1,  1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007},
      {8,   -1,   -1,    6,  -1,   9,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  -1,   -1,   -1,   -1,   -1,    -1,   -1,   -1,   -1,   -1,  -1,     -1},
      {9,  1008, 1008, 1008, -1,  1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008},
      {10, 1009, 1009,  11,  -1,  1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009, 1009},
      {11,  -1,   -1,   -1,  -1,   -1,   12,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  -1,   -1,   -1,   -1,    -1,   -1,   -1,   -1,   -1,   -1,   -1},
      {12, 1010, 1010, 1010, -1,  1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010},
      {13, 1011, 1011, 1011, -1,  1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011},
      {14, 1012, 1012, 1012, -1,  1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012},
      {15, 1013, 1013, 1013, -1,  1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013},
      {16, 1014, 1014, 1014, -1,  1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014},
      {17, 1015, 1015, 1015, -1,  1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015},
      {18, 1016, 1016, 1016, -1,  1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016},
      {19, 1017, 1017, 1017, -1,  1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017},
      {20, 1018, 1018, 1018, -1,  1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018},
      {21, 1019, 1019, 1019, -1,  1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019},
      {22, 1020, 1020, 1020, -1,  1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020},
      {23, 1021, 1021, 1021, -1,  1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021},
      {24, 1022, 1022, 1022, -1,  1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022},
      {25, 1023, 1023, 1023, -1,  1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023},
      {26, 1024, 1024, 1024, -1,  1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024},
      {27, 1040, 1040,  11,  -1,  1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040},
      {28, 1039, 1039, 1039, -1,  1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039}
};


static char *KEYWORDS[14] = {"Begin", "End", "Start", "Stop", "Iff", "Loop", "Void", "Var", "Int", "Call", "Return", "Scan", "Print", "Program"};
static char *DELIMETERS[9] = { ".", "(", ")", ",", "{", "}", ";", "[", "]"};
static char *RELATIONAL[6] ={ "==", "<", ">", "=!=", ">=>", "<=<"};
static char *OPERATORS[8] = {"=", ":", "+", "-", "*", "/", "%", "&"};


static char *tokenName[] = {"ID_tk", "Num_tk", "Equal_tk", "Compare_tk", "=!=_tk", "<_tk","<=<_tk", ">_tk", ">=>_tk",
":_tk", "+_tk", "-_tk", "*_tk", "%_tk", "&_tk", "%_tk", "._tk", "(_tk",")_tk", 
"{_tk", "}_tk", ";_tk",  "[_tk", "Begin_tk", "End_tk", "Start_tk", "Stop_tk", 
"Iff_tk", "Loop_tk", "Void_tk", "Var_tk", "Int_tk", "Call_tk","Return_tk", "Scan_tk", "Print_tk", "Program_tk", ",_tk", "]_tk", "EOF_tk"};

static int tokenID[] = {1000, 1001, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 
1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037,1038,1039,1040,1050};

#endif
